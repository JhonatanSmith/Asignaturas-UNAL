data=read.table(file.choose(),header=T,sep=";",dec=",",
colClasses=c(rep("numeric",7),"factor",rep("numeric",3),"factor"))
datar=data[-c(19:20),]
plot( datar$PDP,datar$DPERM,pch=as.numeric(datar$REGION),col=as.numeric(datar$REGION),
xlab="Longitud de Permanencia",
ylab="Censo Promedio Diario",cex=2,cex.lab=1.5)
legend("topleft",legend=c("R1","R2","R3","R4"),pch=c(1:3),col=c(1:3),cex=1.5)
library(car)
datos=data.frame(Secci?n=factor(rep(c("A","B","C"),each=5)),
scan(what=list(Publicidad=0,Ventas=0)))
datos=data.frame(Secci?n=factor(rep(c("A","B","C"),each=5)),
scan(what=list(Publicidad=0,Ventas=0)))
datos=data.frame(Secci?n=factor(rep(c("A","B","C"),each=5)),
scan(what=list(Publicidad=0,Ventas=0)))
datos=data.frame(Secci?n=factor(rep(c("A","B","C"),each=5)),
scan(what=list(Publicidad=0,Ventas=0)))
datos=data.frame(Secci?n=factor(rep(c("A","B","C"),each=5)),scan(what=list(Publicidad=0,Ventas=0)))
datos=data.frame(Seccion=factor(rep(c("A","B","C"),each=5)),
scan(what=list(Publicidad=0,Ventas=0)))
attach(datos)
View(datos)
#CAMBIANDO NIVEL DE REFERENCIA DE LA VARIABLE CUALITATIVA PARA LA SECCIoN C###
Seccion=relevel(Seccion,ref="C")
Seccion #observe que se informa que los niveles en su orden son C, A, B
#Gr?fico de dispersi?n con identificaci?n de Secciones
plot(Publicidad,Ventas,pch=as.numeric(Seccion),col=as.numeric(Seccion),
xlab="Publicidad (cientos de d?lares)",
ylab="Ventas (miles de d?lares)",cex=2,cex.lab=1.5)
#Gr?fico de dispersi?n con identificaci?n de Secciones
plot(Publicidad,Ventas,pch=as.numeric(Seccion),col=as.numeric(Seccion),
xlab="Publicidad (cientos de d?lares)",
ylab="Ventas (miles de d?lares)",cex=2,cex.lab=1.5)
##MODELO GRAL: RECTAS DIFERENTES. NIVEL DE REF=C###
modelo1=lm(Ventas~Publicidad*Seccion)
summary(modelo1)
confint(modelo1)
names(coef(modelo1))
plot( datar$PDP,datar$DPERM,pch=as.numeric(datar$REGION),col=as.numeric(datar$REGION),
xlab="Longitud de Permanencia",
ylab="Censo Promedio Diario",cex=2,cex.lab=1.5)
legend("topleft",legend=c("R1","R2","R3","R4"),pch=c(1:4),col=c(1:3),cex=1.5)
plot( datar$PDP,datar$DPERM,pch=as.numeric(datar$REGION),col=as.numeric(datar$REGION),
xlab="Longitud de Permanencia",
ylab="Censo Promedio Diario",cex=2,cex.lab=1.5)
legend("topleft",legend=c("R1","R2","R3","R4"),pch=c(1:4),col=c(1:3),cex=1.5)
plot( datar$PDP,datar$DPERM,pch=as.numeric(datar$REGION),col=as.numeric(datar$REGION),
xlab="Longitud de Permanencia",
ylab="Censo Promedio Diario",cex=2,cex.lab=1.5)
legend("topleft",legend=c("R1","R2","R3","R4"),pch=c(1:4),col=c(1:4),cex=1.5)
plot( datar$PDP,datar$DPERM,pch=as.numeric(datar$REGION),col=as.numeric(datar$REGION),
xlab="Longitud de Permanencia",
ylab="Censo Promedio Diario",cex=2,cex.lab=1.5)
legend("topleft",legend=c("R1","R2","R3","R4"),pch=c(1:4),col=c(1:4),cex=1.5)
#Gr?fico de dispersi?n con identificaci?n de Secciones
plot(Publicidad,Ventas,pch=as.numeric(Seccion),col=as.numeric(Seccion),
xlab="Publicidad (cientos de d?lares)",
ylab="Ventas (miles de d?lares)",cex=2,cex.lab=1.5)
attach(datar)
REGION=relevel(REGION,ref="4")
modelo1=lm(DPERM~PDP*REGION)
summary(modelo1)
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
win.graph(width=8.5,height=5)
win.graph(width=8.5,height=5)
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
plot( datar$PDP,datar$DPERM,pch=as.numeric(datar$REGION),col=as.numeric(datar$REGION),
xlab="Longitud de Permanencia",
ylab="Censo Promedio Diario",cex=2,cex.lab=1.5)
legend("topleft",legend=c("R1","R2","R3","R4"),pch=c(1:4),col=c(1:4),cex=1.5)
plot( datar$PDP,datar$DPERM,pch=as.numeric(datar$REGION),col=as.numeric(datar$REGION),
xlab="Longitud de Permanencia",
ylab="Censo Promedio Diario",cex=2,cex.lab=1.5)
legend("topleft",legend=c("R1","R2","R3","R4"),pch=c(1:4),col=c(1:4),cex=1.5)
modelo1=lm(DPERM~PDP*REGION)
summary(modelo1)
attach(datar)
REGION=relevel(REGION,ref="4")
attach(datar)
REGION=relevel(REGION,ref="4")
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
boxplot(rstudent(modelo1)~REGION,border=1:4)
abline(h=c(-2,0,2),lty=3)
test=shapiro.test(rstudent(modelo1))
qqnorm(rstudent(modelo1),pch=as.numeric(REGION),cex=1.5,col=as.numeric(REGION))
qqline(rstudent(modelo1))
legend("topleft",legend=rbind(c("Statistic W","p.value"),
round(c(test$statistic,test$p.value),digits=4)),cex=0.8)
linearHypothesis(modelo1,c("REGION1=0","REGION2=0","REGION3=0"))
modelo1=lm(DPERM~PDP*REGION)
summary(modelo1)
modelo1=lm(DPERM~PDP*REGION)
summary(modelo1)
names(coef(modelo1))
linearHypothesis(modelo1,c("PDP:REGION1=PDP:REGION2=PDP:REGION3"))
matriz_diseño = as.data.frame(model.matrix(modelo1))
matriz_diseño = as.data.frame(model.matrix(modelo1))
REGION1 = matriz_diseño$REGION1
REGION2 = matriz_diseño$REGION2
REGION3 = matriz_diseño$REGION3
##MODELO GRAL: RECTAS DIFERENTES. NIVEL DE REF=C###
modelo1=lm(Ventas~Publicidad*Seccion)
##MODELO GRAL: RECTAS DIFERENTES. NIVEL DE REF=C###
modelo1=lm(Ventas~Publicidad*Seccion)
summary(modelo1)
confint(modelo1)
#AN?LISIS RESIDUALES EN modelo1
#PROBANDO HIP?TESIS LINEALES PARA MODELO AJUSTADO EN modelo1
names(coef(modelo1)) #Observe el nombre de los t?rminos en el modelo1
modelo1=lm(DPERM~PDP*REGION)
summary(modelo1)
linearHypothesis(modelo1,c("PDP:REGION1=0","PDP:REGION2=0","PDP:REGION3=0"))
library(car)
win.graph(width=8.5,height=5)
residualPlots(modelo1,groups=REGION,type="rstudent",linear=F,cex=1,pch=1:4,col=1:4)
linearHypothesis(modelo1,c("PDP:REGION1=0","PDP:REGION2=0","PDP:REGION3=0"))
linearHypothesis(modelo1,c("PDP:REGION1=PDP:REGION2=0"))
linearHypothesis(modelo1,c("PDP:REGION1 = PDP:REGION2=0"))
linearHypothesis(modelo1,c("PDP:REGION1 = 0","PDP:REGION2=0"))
linearHypothesis(modelo1,c("PDP:REGION1 = 0","PDP:REGION3=0"))
linearHypothesis(modelo1,c("PDP:REGION2 = 0","PDP:REGION3=0"))
linearHypothesis(modelo1,c("PDP:REGION1-PDP:REGION2= 0"))
# p=0.279 > alfa no se rechaza por tanto son iguales
linearHypothesis(modelo1,c("PDP:REGION1-PDP:REGION3= 0"))
# p=0.05881 > alfa no se rechaza por tanto son iguales
linearHypothesis(modelo1,c("PDP:REGION2-PDP:REGION3= 0"))
# p=0.5493 > alfa no se rechaza por tanto son iguales
linearHypothesis(modelo1,c("PDP:REGION1-PDP:REGION2= 0"))
linearHypothesis(modelo1,c("PDP:REGION1-PDP:REGION3= 0"))
linearHypothesis(modelo1,c("PDP:REGION2-PDP:REGION3= 0"))
# p=0.5493 > alfa no se rechaza por tanto son iguales
names(coef(modelo1))
linearHypothesis(modelo1,c("PDP:REGION1=0","PDP:REGION2= 0","PDP:REGION3=0"))
linearHypothesis(modelo1,c("PDP:REGION1=PDP:REGION2"))
linearHypothesis(modelo1,c("PDP:REGION1-PDP:REGION2= 0"))
names(coef(modelo1))
linearHypothesis(modelo1,c("PDP:REGION2=0","PDP:REGION3= 0","PDP:REGION1=0","REGION1=0","REGION2=0","REGION3=0"  ))
