knitr::opts_chunk$set(echo = TRUE)
library(rsm)
library(car)
library(leaps)
library(scatterplot3d)
library(GGally)
library(olsrr)
library(perturb)
library(olsrr)
setwd("C:/Users/jhsga/OneDrive/Escritorio/Estadistica/Estadistica 2/Trabajo pagado/SeBorraMañana-20220511T024810Z-001/SeBorraMañana/trabajo")
table <- read.table("Equipo31.txt", header = T)
setwd("C:/Users/jhsga/OneDrive/Escritorio/Estadistica/Estadistica 2/Trabajo pagado/SeBorraMañana-20220511T024810Z-001/SeBorraMañana/trabajo")
table <- read.table("Equipo44.txt", header = T)
head(table)
head(table)
head(table)
View(table)
# Setup of a Correlation Lower Panel in Scatterplot Matrix
myPanel.hist <- function(x, ...){
usr <- par("usr"); on.exit(par(usr))
# Para definir región de graficiación
par(usr = c(usr[1:2], 0, 1.5) )
# Para obtener una lista que guarde las marcas de clase y conteos en cada una:
h <- hist(x, plot = FALSE)
breaks <- h$breaks;
nB <- length(breaks)
y <- h$counts; y <- y/max(y)
# Para dibujar los histogramas
rect(breaks[-nB], 0, breaks[-1], y, col="cyan", ...)
}
myPanel.hist(table)
myPanel.hist(table$X1)
df <- data.frame(table)
attach(df)
gg2<-ggpairs(df,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(df)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(df[,i],breaks = "FD",plot=F)$breaks,
colour = "red",fill="lightgoldenrod1")
}
gg2<-ggpairs(df,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(df)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(df[,i],breaks = "FD",plot=F)$breaks,
colour = "red",fill="lightgoldenrod1")
}
gg2
gg2
df <- data.frame(table)
attach(df)
df <- data.frame(table)
attach(df)
myAnova <- function(lm.model){
SSq <- unlist(anova(lm.model)["Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1:k])
SSE <- SSq[(k + 1)]
MSR <- SSR/k
df.error <- unlist(anova(lm.model)["Df"])[k + 1]
MSE <- SSE/df.error
F0 <- MSR/MSE
PV <- pf(F0, k, df.error, lower.tail = F)
result<-data.frame(Sum_of_Squares = format(c(SSR, SSE), digits = 6), DF = format(c(k, df.error), digits = 6),
Mean_Square = format(c(MSR, MSE), digits = 6), F_Value = c(format(F0, digits = 6), ''),
P_value = c(format(PV, digits = 6), ''), row.names = c("Model", "Error"))
result
}
# Ajuste del modelo de RLM
modelo=lm(Y~X1+X2+X3+X4)
summary(modelo)
gg2<-ggpairs(df,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(df)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(df[,i],breaks = "FD",plot=F)$breaks,
colour = "red",fill="lightgoldenrod1")
}
# Ajuste del modelo de RLM
modelo=lm(Y~X1+X2+X3+X4)
# Ajuste del modelo de RLM
modelo=lm(Y~X1+X2+X3+X4)
summary(modelo)
myAnova <- function(lm.model){
SSq <- unlist(anova(lm.model)["Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1:k])
SSE <- SSq[(k + 1)]
MSR <- SSR/k
df.error <- unlist(anova(lm.model)["Df"])[k + 1]
MSE <- SSE/df.error
F0 <- MSR/MSE
PV <- pf(F0, k, df.error, lower.tail = F)
result<-data.frame(Sum_of_Squares = format(c(SSR, SSE), digits = 6), DF = format(c(k, df.error), digits = 6),
Mean_Square = format(c(MSR, MSE), digits = 6), F_Value = c(format(F0, digits = 6), ''),
P_value = c(format(PV, digits = 6), ''), row.names = c("Model", "Error"))
result
}
# Ajuste del modelo de RLM
modelo=lm(Y~X1+X2+X3+X4)
# Ajuste del modelo de RLM
modelo=lm(Y~X1+X2+X3+X4)
# ANOVA
myAnova(modelo)
# ANOVA
myAnova(modelo)
knitr::opts_chunk$set(echo = TRUE)
# ANOVA
myAnova(modelo)
# ANOVA
myAnova(modelo)
myAnova(modelo)
# ANOVA
myAnova(modelo)
6919.40/(6919.40 + 2117.02)
49*47.0448/(6919.40 + 2117.02)
miscoeficientes=function(modeloreg,datosreg){
coefi=coef(modeloreg)
datos2=as.data.frame(scale(datosreg))
coef.std=c(0,coef(lm(update(formula(modeloreg),~.+0),datos2)))
resul=data.frame(Estimacion=coefi, Coef.Std=coef.std)
cat("Coeficientes estimados y Coeficientes estimados estandarizados","\n")
resul
}
miscoeficientes(modelo,df)
miscoeficientes(modelo,df)
miscoeficientes(modelo,df)
summary(modelo)
linearHypothesis(modelo,c("X4=0", "X2=0", "X0=0"))
linearHypothesis(modelo,c("X4=0", "X2=0"))
linearHypothesis(modelo,c("X4=0", "X2=0", "intercept=0"))
?linearHypothesis
linearHypothesis(modelo,c("X4=0", "X2=0", "Intercept=0"))
linearHypothesis(modelo,c("X4=0", "X2=0", "(Intercept)=0"))
residualPlots(modelo,tests=FALSE,type="rstudent",quadratic=FALSE,col=4,cex=1.0)
myAnova(modelo)
myAnova(modelo)
miscoeficientes=function(modeloreg,datosreg){
coefi=coef(modeloreg)
datos2=as.data.frame(scale(datosreg))
coef.std=c(0,coef(lm(update(formula(modeloreg),~.+0),datos2)))
resul=data.frame(Estimacion=coefi, Coef.Std=coef.std)
cat("Coeficientes estimados y Coeficientes estimados estandarizados","\n")
resul
}
miscoeficientes(modelo,df)
residualPlots(modelo,tests=FALSE,type="rstudent",quadratic=FALSE,col=4,cex=1.0)
test=shapiro.test(rstudent(modelo)) #Test de normalidad sobre residuales estudentizados
qqnorm(rstudent(modelo),cex=2)
qqline(rstudent(modelo),col=4)
legend("topleft",legend=rbind(c("Statistic W","p.value"),round(c(test$statistic,test$p.value),digits=5)),cex=1.2)
# Cálculo de errores estándar de los valores ajustados
se.yhat <- predict(modelo, se.fit = T)$se.fit
# Residuales crudos del modelo
residuals <- round(modelo$residuals, 4)
#res.stud
ei <- round(rstandard(modelo), 4)
##rstudent
ri <- round(rstudent(modelo), 4)
# Valores de la diagonal de la matriz H
hii.value <- round(hatvalues(modelo), 4)
# Tabla de diagnósticos
j <- data.frame(Y = Y, ri, ei, se.yhat, residuals, hii.value)
head(j)
library(dplyr)
filter(j,abs(j$ri)>3 )
10/50
library(dplyr)
filter(.data = j, j$hii.value>abs(0.2))
filter(.data = j, j$hii.value>abs(0.2))
filter(.data = j, abs(j$hii.value)>a(0.2))
filter(.data = j, abs(j$hii.value)>(0.2))
filter(.data = j, abs(j$hii.value)>(0.2))
prb <-influence.measures(modelo)$is.inf
smith <- data.frame(prb)
prb <- data.frame(prb)
head(prb)
filter(prb, prb$cov.r=="TRUE")
head(prb)
k[5,]
plot(k)
k = ols_step_all_possible(modelo);head(k)
k[5,]
modelo_5=lm(Y~X1+X3,data = df)
summary(modelo_5)
influencePlot(modelo,xlim=c(0,1),ylim=c(-6.0,4.5))
