plot
plot <- ggplot(df, aes(x=Distancia, y=Disimilitud)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
plot <- ggplot(df, aes(x=Distancia, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
plot
plot <- ggplot(df, aes(x=Distancia, y=Disimilitud3)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
plot
# Se crea un data frame para extraer los valores de las matrices triangular (en este ejemplo, se utiliza la inferior, es decir: lower)
df1 <- data.frame(Disimilitud1=dist.prof[lower.tri(dist.prof)], Distancia=geodist[lower.tri(geodist)])
df2 <- data.frame(Disimilitud2=dist.temp[lower.tri(dist.temp)], Distancia=geodist[lower.tri(geodist)])
df3 <- data.frame(Disimilitud3=dist.sal[lower.tri(dist.sal)], Distancia=geodist[lower.tri(geodist)])
df4 <- data.frame(Disimilitud4=dist.oxi[lower.tri(dist.oxi)], Distancia=geodist[lower.tri(geodist)])
plot <- ggplot(df, aes(x=Distancia, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
```{r}
# Se crea un data frame para extraer los valores de las matrices triangular (en este ejemplo, se utiliza la inferior, es decir: lower)
df1 <- data.frame(Disimilitud1=dist.prof[lower.tri(dist.prof)], Distancia1=geodist[lower.tri(geodist)])
df2 <- data.frame(Disimilitud2=dist.temp[lower.tri(dist.temp)], Distancia2=geodist[lower.tri(geodist)])
df3 <- data.frame(Disimilitud3=dist.sal[lower.tri(dist.sal)], Distancia3=geodist[lower.tri(geodist)])
df4 <- data.frame(Disimilitud4=dist.oxi[lower.tri(dist.oxi)], Distancia4=geodist[lower.tri(geodist)])
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
View(df)
View(df1)
plot <- ggplot(df, aes(x=Distancia, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot <- ggplot(df, aes(x=Distancia, y=Disimilitud2)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud2)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df1)
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud2)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df2)
plot <- ggplot(df, aes(x=Distancia2, y=Disimilitud2)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df1)
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df2)
plot <- ggplot(df, aes(x=Distancia2, y=Disimilitud2)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud temperatura") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df3)
plot <- ggplot(df, aes(x=Distancia3, y=Disimilitud3)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud salinidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df1)
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df2)
plot <- ggplot(df, aes(x=Distancia2, y=Disimilitud2) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df2)
plot <- ggplot(df, aes(x=Distancia2, y=Disimilitud2)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df3)
plot <- ggplot(df, aes(x=Distancia3, y=Disimilitud3)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud salinidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df4)
plot <- ggplot(df, aes(x=Distancia4, y=Disimilitud4)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud oxigeno") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
plot(geodatos)
geodatos <- as.geodata(datos.cienaga,coords.col=1:2,data.col=4)
class(geodatos)
geodatos
plot(geodatos)
# Covertir datos en formato geoR
geodatos.prof <- as.geodata(datos.cienaga,coords.col=1:2,data.col=3)
class(geodatos.prof)
geodatos.prof
plot(geodatos.prof)
# Covertir datos en formato geoR
geodatos.prof <- as.geodata(datos.cienaga,coords.col=1:2,data.col=3)
class(geodatos.prof)
plot(geodatos.prof)
# Covertir datos en formato geoR
geodatos.prof <- as.geodata(datos.cienaga,coords.col=1:2,data.col=3)
plot(geodatos.prof)
geodatos.temp <- as.geodata(datos.cienaga,coords.col=1:2,data.col=4)
class(geodatos.temp)
plot(geodatos.temp)
plot(geodatos.temp)
plot(geodatos.temp)
geodatos.sal <- as.geodata(datos.cienaga,coords.col=1:2,data.col=5)
plot(geodatos.sal)
# Covertir datos en formato geoR
geodatos.oxi <- as.geodata(datos.cienaga,coords.col=1:2,data.col=6)
plot(geodatos.oxi)
# Test de Mantel
mantel(geodist, dist.prof) # vegan
mantel.rtest(geodist, dist.temp, nrepet=999) # ade4
mantel.rtest(geodist, dist.prof, nrepet=999) # ade4
mantel.rtest(geodist, dist.temp, nrepet=999) # ade4
mantel.rtest(geodist, dist.sal, nrepet=999) # ade4
mantel.rtest(geodist, dist.oxi, nrepet=999) # ade4
head(datos)
View(datos)
# Localizaciones de muestreo
plot(datos[,1:2])
library(geoR)
library(ade4)
library(vegan)
library(readxl)
library(ggplot2)
library(scatterplot3d)
datos.cienaga <- read_excel("base_cienaga.xls")
head(datos.cienaga)
plot(datos.cienaga[,1:2], main = "Muestreo Cienga")
# Cargar la base de datos Cienaga Crande
datos <- read_excel("base_cienaga.xls")
datos <- datos.cienaga
# Graficos descriptivos
plot(geodatos)
View(geodatos)
# Defincion de los intervalos de conteo - Variograma Cloud
summary(dist(geodatos.prof$coords))
plot(variog(geodatos.prof,option = "cloud"))
plot(variog(geodatos.prof,option = "cloud"))
variograma <- variog(geodatos.prof,option="bin",uvec=seq(0,20000,1500))
variograma
variograma <- variog(geodatos.prof,option="bin",uvec=seq(0,20000,1500))
plot(variograma)
plot(variograma)
variograma_mc <- variog.mc.env(geodatos.prof,obj=variograma,nsim=99)
lines(variograma_mc,col="red")
variograma1 <- variog(geodatos.prof,option="bin",uvec=seq(0,20000,1500))
plot(variograma1)
variograma2 <- variog(geodatos.temp,option="bin",uvec=seq(0,20000,1500))
plot(variograma2)
variograma3 <- variog(geodatos.sal,option="bin",uvec=seq(0,20000,1500))
plot(variograma1)
variograma1 <- variog(geodatos.oxi,option="bin",uvec=seq(0,20000,1500))
plot(variograma1)
variograma1 <- variog(geodatos.prof,option="bin",uvec=seq(0,20000,1500))
plot(variograma1)
?variog
variograma1 <- variog(geodatos.prof,option="bin",uvec=seq(0,2000,150))
plot(variograma1)
variograma2 <- variog(geodatos.temp,option="bin",uvec=seq(0,20000,1500))
plot(variograma2)
variograma1 <- variog(geodatos.prof,option="bin",uvec=seq(0,20000,1500))
plot(variograma1)
variograma2 <- variog(geodatos.temp,option="bin",uvec=seq(0,20000,1500))
plot(variograma2)
variograma3 <- variog(geodatos.sal,option="bin",uvec=seq(0,20000,1500))
plot(variograma1)
setwd("C:/Users/jhsga/OneDrive/Escritorio/Estadistica/Estadistica Espacial/Smith/Script practicas R/Clase 8/Modificado/Material_Complementario")
library(geoR)
library(ade4)
library(vegan)
library(readxl)
library(ggplot2)
library(scatterplot3d)
datos.cienaga <- read_excel("base_cienaga.xls")
library(geoR)
library(ade4)
library(vegan)
library(readxl)
library(ggplot2)
library(scatterplot3d)
datos.cienaga <- read_excel("base_cienaga.xls")
head(datos.cienaga)
plot(datos.cienaga[,1:2], main = "Muestreo Cienga")
attach(df1)
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df1)
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
setwd("C:/Users/jhsga/OneDrive/Escritorio/Estadistica/Estadistica Espacial/Smith/Trabajos/Actividad 2 Cienaga")
plot <- plot(df, (x=Distancia1, y=Disimilitud1)
plot <- plot(data = df, (x=Distancia1, y=Disimilitud1)
plot(data = df, (x=Distancia1, y=Disimilitud1)
plot(data = df, (x=Distancia1, y=Disimilitud1)
plot(data = df, x=Distancia1, y=Disimilitud1)
attach(df1)
plot(data = df, x=Distancia1, y=Disimilitud1)
geom_smooth(method=lm)
attach(df1)
plot(data = df, x=Distancia1, y=Disimilitud1)
add(geom_smooth(method=lm))
attach(df1)
plot(data = df, x=Distancia1, y=Disimilitud1,geom_smooth(method=lm))
attach(df1)
plot(data = df, x=Distancia1, y=Disimilitud1)
geom_smooth(method=lm)
attach(df1)
plot <- ggplot(df, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df2)
plot <- ggplot(data = df2, aes(x=Distancia2, y=Disimilitud2)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud temperatura") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df1)
plot <- ggplot(data = df1, aes(x=Distancia1, y=Disimilitud1)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud profundidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
attach(df3)
plot <- ggplot(data =df3, aes(x=Distancia3, y=Disimilitud3)) +
geom_point() + theme_test(base_size = 14, base_family = "Times New Roman") +
labs(x="Distancia geográfica (m)", y="Disimilitud salinidad") +
theme(axis.title = element_text(face="bold"), axis.text = element_text(colour="black")) +
geom_smooth(method=lm)
plot
setwd("C:/Users/jhsga/OneDrive/Escritorio/Estadistica/Multivariado/Tareas/Tarea 3")
knitr::opts_chunk$set(echo = TRUE)
datos <- read.table("Datos 4-28.txt", sep= " ")
datos <- read.table("Datos 4-28.txt", sep= " ")
datos <- read.table("Datos 4-28.txt", sep= " ")
View(datos)
datos <- read.table("Datos 4-28.txt", sep= " ", header = T)
View(datos)
uno <- read.table(file("datos/T11-7.DAT"))
View(uno)
datos <- uno
dim(datos)
library(knitr)
library(data.table)
library(pastecs)
kable(head(datos),caption="Emcabezado de Datos")
kable(datos,caption="Datos completos")
fivenum(datos[,1])       #estadisticos de tukey:min,q1,median,q3,max
library(Hmisc)
describe(datos[,1])      #fucntion describe de Hmisc
library(pastecs)
stat.desc(datos[,1])     #fucntion stat,desc de pstecs
library(psych)
describe(datos[,1] )     #fucntion describe de psych
library(pastecs)
tablita<-stat.desc(datos[,1:5])
kable(tablita,caption="Resumen de Datos con stat.desc de PASTECS",digits=3)
library(data.table)
tablita2<-data.table(Estadisticos=rownames(tablita),tablita)
kable(tablita2,caption="Resumen de Datos con data.table de DATA.TABLE",digits=4)
library(stargazer)
stargazer(datos,header=FALSE,title = "Resumen de Datos con stargazer",digits=4)
library(reporttools)                      #para cruzar continuasxcategoricas
titulo<-"Resumen de los Datos con reporttools (cruce de cuantixcuali)"
vbles<-datos[,1:4]
estadisticas<-list("mean","s",
"c$_{\\mathrm{v}}\\%$"=
function(x){
return((sd(x)/mean(x))*100)
},
"min","median","max","iqr","n", "na",
"skewness"=function(x) {
m3=mean((x-mean(x))^3)
skew=m3/(sd(x)^3)
return(skew)},
"kurtosis"=function(x) {
m4=mean((x-mean(x))^4)
kurt=m4/(sd(x)^4)
return(kurt)}
)
#Cruece da vbles_cont con vbles_nominal
tableContinuous(vars = vbles, group = datos[,6], stats = estadisticas,cap=titulo,
print.pval = "kruskal",longtable=FALSE)
library(reporttools)                      #para cruzar continuasxcategoricas
titulo<-"Resumen de los Datos con reporttools (cruce de cuantixcuali)"
vbles<-datos[,1:4]
estadisticas<-list("mean","s",
"c$_{\\mathrm{v}}\\%$"=
function(x){
return((sd(x)/mean(x))*100)
},
"min","median","max","iqr","n", "na",
"skewness"=function(x) {
m3=mean((x-mean(x))^3)
skew=m3/(sd(x)^3)
return(skew)},
"kurtosis"=function(x) {
m4=mean((x-mean(x))^4)
kurt=m4/(sd(x)^4)
return(kurt)}
)
#Cruece da vbles_cont con vbles_nominal
tableContinuous(vars = vbles, stats = estadisticas,cap=titulo,longtable=FALSE)
library(reporttools)              #para cruzar continuasxcategoricas
cate<-factor(rep(c("A","B","C","D"),c(15,8,15,18)))
data2<-cbind(datos,cate)
# solo tabla de vbles_nominales
titulo2<-"Caracteristicas de las variables nominales"
tableNominal(vars = data2[,6:7],cap=titulo2,vertical = FALSE,font.size = "scriptsize",
lab = "tab:nominal1",longtable = FALSE,cumsum = TRUE)
library(ggplot2)              #para cruzar continuasxcategoricas
ggplot(datos,aes(x=datos[,2]))+geom_histogram()
library(ggplot2)              #para cruzar continuasxcategoricas
datos3<-data.frame(cbind(rnorm(100,0,1) , rnorm(100,0,1)))
ggplot(datos3,aes(x=datos3[,1])) +
geom_histogram(aes(y =  ..density..) , color="black", fill="white") + geom_density(alpha=0.2,fill="blue")
library(ggplot2)              #para cruzar continuasxcategoricas
ggplot(datos, aes(datos[,6],datos[,1])) +
geom_boxplot()
library(ggplot2)              #para cruzar continuasxcategoricas
p<-ggplot(datos, aes(datos[,6],datos[,1]))
p+geom_boxplot()+geom_jitter(width = 0.2)
library(ggplot2)              #para cruzar continuasxcategoricas
p<-ggplot(datos, aes(datos[,6],datos[,1]))
p + geom_boxplot() + coord_flip()
library(ggplot2)              #para cruzar continuasxcategoricas
p<-ggplot(datos, aes(datos[,6],datos[,1]))
p + geom_boxplot(notch = TRUE)
library(ggplot2)              #para cruzar continuasxcategoricas
p<-ggplot(datos, aes(datos[,6],datos[,1]))
p + geom_boxplot(varwidth = TRUE)
library(ggplot2)              #para cruzar continuasxcategoricas
p<-ggplot(datos, aes(datos[,6],datos[,1]))
p + geom_boxplot(varwidth = FALSE)
library(ggplot2)              #para cruzar continuasxcategoricas
cate<-factor(rep(c("A","B","C","D"),c(15,8,15,18)))
cate2<-factor(rep(c("SI","NO"),c(28,28)))
data2<-cbind(datos,cate,cate2)
p<-ggplot(data2, aes(data2[,7],datos[,1]))
p + geom_boxplot(aes(colour = data2[,8]))
library(ggplot2)              #para cruzar continuasxcategoricas
cate<-factor(rep(c("A","B","C","D"),c(15,8,15,18)))
cate2<-factor(rep(c("SI","NO"),c(28,28)))
data2<-cbind(datos,cate,cate2)
p<-ggplot(data2, aes(data2[,8],datos[,1]))
p + geom_boxplot(aes(colour = data2[,7]))
vector_medias <-apply(datos[,1:5],2,mean);
kable(round(vector_medias,3))
var_cov <- cov(datos[,1:5]);
kable(round(var_cov,3))
corr <- cor(datos[,1:5]);
kable(round(corr,3))
corrplot(mat.cor,method="shade",shade.col=NA,tl.col="black",
tl.srt=45,addCoef.col="black",addcolorlabel="no",order="AOE" )
datos4 <- read.table(file("datos/T8-6.DAT"),row.names = 1)
mat.cor4<-cor(datos4,method="pearson")
kable(round(mat.cor4,3))
corrplot(mat.cor4,method="shade",shade.col=NA,tl.col="black",
tl.srt=45,addCoef.col="black",addcolorlabel="no",order="AOE" )
corrplot(mat.cor4,method="shade",shade.col=NA,tl.col="black",tl.srt=45,
addCoef.col="black",addcolorlabel="no",order="AOE",type="upper" )
corrplot(mat.cor4,method="pie",shade.col=NA,tl.col="black",tl.srt=45,
addCoef.col="black",addcolorlabel="no",order="FPC",type="upper",
diag=F,addshade="all" )
corrplot(mat.cor4,method="shade",shade.col=NA,tl.col="black",tl.srt=45,
addCoef.col="black",addcolorlabel="no",order="FPC",type="upper",
diag=F,addshade="all" )
if(!require(pacman)){install.packages("pacman"); library(pacman)}
pacman::p_load("tidyverse", "ggplot2", "pBrackets", "knitr", "HH", "car", "rgl", "sampling","biotools")
source("funcionesR/funciones.R", local = knitr::knit_global())
#source("funcionesR/Functions.R", local = knitr::knit_global())
ejemplo<-c(-1,-0.10,0.16,0.41,0.62,0.80,1.26,1.54,1.71,2.30)
library(kableExtra)
matrix(ejemplo, nrow=1, ncol = 10, byrow=TRUE) %>%
kable(booktabs = TRUE,format = "latex",caption="\\label{ejemplo1-notas}Datos") %>%
kable_styling(latex_options = c("striped", "condensed","HOLD_position"),
position = "center",full_width = FALSE)
library(ggplot2)
ejemplo1<-data.frame(ejemplo)
p<-ggplot(ejemplo1, aes(sample = ejemplo1[,1]) )
p + geom_qq() + geom_qq_line()+
labs(title="Normal Probaility Plot o QQ-plot",
x = "Valores Teóricos (Estadísticos de Orden)",
y = "Valores Muestrales (Quantiles)")+
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 10, angle = 0,
hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 10),
text = element_text(size = 12))+
theme(
panel.background = element_rect(fill = "lightblue"),
panel.grid.minor = element_line(linetype = "dotted")
)
ggsave("figurasR/npp.png")
?qqnorm
qqnorm(datos)
df <- data.frame(datos)
qqnorm(df)
View(df)
qqnorm(df[1:5])
qqnorm(df[,1:5])
test=shapiro.test(rstudent(datos)) #Test de normalidad sobre residuales estudentizados
test=shapiro.test(rstudent(datos)) #Test de normalidad sobre residuales estudentizados
test=shapiro.test((datos)) #Test de normalidad sobre residuales estudentizados
View(df)
test=shapiro.test((datos[,1:5])) #Test de normalidad sobre residuales estudentizados
df.norm <- data.frame(datos[1:5])
View(df.norm)
datos <- read.table("Datos 4-28.txt", sep= " ", header = T)
df.norm <- data.frame(datos[1:5])
View(df.norm)
test=shapiro.test((datos[,1:5]))
shapiro.test(datos[,3])
?mqqnorm
??mqqnorm
mqqnorm(datos_gen,main="Gráfico QQ-Plot para Normalidad Multivariada")
install.packages("pBrackets")
install.packages("pBrackets")
library(ICS)
install.packages(mvtnorm)
install.packages("mvtnorm")
install.packages("mvtnorm")
knitr::opts_chunk$set(echo = TRUE)
library(mbtnorm)
library(mvtnorm)
library(ICS)
mqqnorm(df.norm,main="Gráfico QQ-Plot para Normalidad Multivariada")
install.packages("RVAideMemoire")
??mqqnorm
library(RVAideMemoire)
library(mvtnorm)
library(RVAideMemoire)
mqqnorm(df.norm,main="Gráfico QQ-Plot para Normalidad Multivariada")
library(RVAideMemoire)
library(mvnormtest)
mshapiro.test(t(df.norm))
